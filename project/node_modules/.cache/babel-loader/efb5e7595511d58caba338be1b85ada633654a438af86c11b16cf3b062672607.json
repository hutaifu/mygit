{"ast":null,"code":"//该文件专门用于创建整个应用的路由器\nimport VueRouter from \"vue-router\";\nimport About from \"../components/HelloWorld\";\nimport Test from \"../components/TestPageVue\";\nconst router = new VueRouter({\n  routes: [{\n    path: \"/about/:id/:msg\",\n    //使用占位符，接收params参数，不常用，这时侯不能使用别名\n    component: About,\n    name: \"guanyu\"\n  },\n  //别名   除了使用path,也能使用别名， :to={name:\"guanyu\"}\n  {\n    path: \"/test\",\n    component: Test,\n    children: [{\n      path: \"news\",\n      //子路由不需要加 /\n      component: About //使用时路径要写全。\n    }, {\n      path: \"msg\",\n      component: Test,\n      //props的第一种写法，值为对象\n      // props:{a:1,b:\"hello\"},//传给对应组件，死数据屁用没有\n      //props的第二种写法,布尔值,如果为true,\n      // props:true,//只能将params参数变成props传给组件，也没啥用\n      props($route) {\n        return {\n          id: $route.id,\n          title: $route.title\n        };\n      } //第三种写法，值为函数,接收参数可以使用嵌套解构赋值\n    }]\n  }]\n});\n//全局前置路由守卫———每次路由切换和初始化被调用\nrouter.beforeEach((to, from, next) => {\n  next();\n});\nexport default router;","map":{"version":3,"names":["VueRouter","About","Test","router","routes","path","component","name","children","props","$route","id","title","beforeEach","to","from","next"],"sources":["D:/mygit/project/src/router/index.js"],"sourcesContent":["//该文件专门用于创建整个应用的路由器\r\nimport VueRouter from \"vue-router\"\r\nimport About from \"../components/HelloWorld\"\r\nimport Test from \"../components/TestPageVue\"\r\n\r\nconst router = new VueRouter({\r\n    routes:[\r\n        {path:\"/about/:id/:msg\",//使用占位符，接收params参数，不常用，这时侯不能使用别名\r\n        component:About,\r\n        name:\"guanyu\"},//别名   除了使用path,也能使用别名， :to={name:\"guanyu\"}\r\n        {path:\"/test\",\r\n        component: Test,\r\n        children:[\r\n            {\r\n                path:\"news\",//子路由不需要加 /\r\n                component:About,//使用时路径要写全。\r\n            },\r\n            {\r\n             path:\"msg\",\r\n             component:Test,\r\n                //props的第一种写法，值为对象\r\n                // props:{a:1,b:\"hello\"},//传给对应组件，死数据屁用没有\r\n                //props的第二种写法,布尔值,如果为true,\r\n                // props:true,//只能将params参数变成props传给组件，也没啥用\r\n                props($route){\r\n                 return {id:$route.id,title:$route.title}\r\n                }//第三种写法，值为函数,接收参数可以使用嵌套解构赋值\r\n\r\n            }\r\n        ]},\r\n    ]\r\n})\r\n//全局前置路由守卫———每次路由切换和初始化被调用\r\nrouter.beforeEach((to,from,next)=>{\r\n    next();\r\n})\r\n\r\n\r\n\r\n\r\nexport default router;\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,2BAA2B;AAE5C,MAAMC,MAAM,GAAG,IAAIH,SAAS,CAAC;EACzBI,MAAM,EAAC,CACH;IAACC,IAAI,EAAC,iBAAiB;IAAC;IACxBC,SAAS,EAACL,KAAK;IACfM,IAAI,EAAC;EAAQ,CAAC;EAAC;EACf;IAACF,IAAI,EAAC,OAAO;IACbC,SAAS,EAAEJ,IAAI;IACfM,QAAQ,EAAC,CACL;MACIH,IAAI,EAAC,MAAM;MAAC;MACZC,SAAS,EAACL,KAAK,CAAC;IACpB,CAAC,EACD;MACCI,IAAI,EAAC,KAAK;MACVC,SAAS,EAACJ,IAAI;MACX;MACA;MACA;MACA;MACAO,KAAKA,CAACC,MAAM,EAAC;QACZ,OAAO;UAACC,EAAE,EAACD,MAAM,CAACC,EAAE;UAACC,KAAK,EAACF,MAAM,CAACE;QAAK,CAAC;MACzC,CAAC;IAEL,CAAC;EACJ,CAAC;AAEV,CAAC,CAAC;AACF;AACAT,MAAM,CAACU,UAAU,CAAC,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,KAAG;EAC9BA,IAAI,CAAC,CAAC;AACV,CAAC,CAAC;AAKF,eAAeb,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}